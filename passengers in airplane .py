#задачка из яндекс контеста
#Первая строка содержит число В самолете n рядов и по три кресла слева и справа в каждом ряду.
# Крайние кресла (A и F) находятся у окна, центральные (C и D) – у прохода.
# На регистрацию приходят группы из одного, двух или трех пассажиров.
# Они желают сидеть рядом, то есть на одном ряду и на одной стороне: левой или правой.
# Например, группа из двух пассажиров может сесть на кресла B и C, но не может сесть на кресла C и D,
# потому что они разделены проходом, а также не может сесть на кресла A и C, потому что тогда они окажутся не рядом.
# Кроме того, один из пассажиров каждой группы очень требовательный – он хочет сесть либо у окна, либо у прохода.
# Конечно же, каждая группа из пассажиров хочет занять места в ряду с как можно меньшим номером, ведь тогда они скорее выйдут из самолета после посадки.
# Для каждой группы пассажиров определите, есть ли места в самолете, подходящие для них.
# данные ввода
# 4
# ..._.#.
# .##_...
# .#._.##
# ..._...
# 7
# 2 left aisle
# 3 right window
# 2 left window
# 3 left aisle
# 1 right window
# 2 right window
# 1 right window
# пример вывода :
# Passengers can take seats: 1B 1C
# .XX_.#.
# .##_...
# .#._.##
# ..._...
# если подходящих мест нет, то: Cannot fulfill passengers requirements
# конструкция супер громоздкая и тяжело читаемая,
# но по скорости выполнения лучше ,чем другие варианты с повторными переборами в переборах
c=[]
q='ABCDEF'    #нужен для вывода мест , ABC- места  с 1 по 3, DEF- места с 4 по 6
for i in range(int(input())) :    # число рядов
    c.append(input().split('_'))  # занятость рядов , '.'-свободно , '#' = занято
for i in range(int(input())) :    # число групп пассажиров
    x1,x2,x3=input().split()      # группы в формате 3 left aisle , window-'ближе к  окну' ,aisle-ближе к проходу
    c1=0
    if x2=='left' :
        if x3=='window' :
            x1=int(x1)
            for j in range(len(c)) :
                if  '#' not in c[j][0][:x1] : # долго думал как упростить код ,но решил что лучше всего подойдут срезы,здесь проверка на то подходит этот ряд или нет
                    c[j][0]='X'*x1+c[j][0][x1:] # изменяю ряд(сначала требовалось Х обозначить какие места займет данная группа
                    print('Passengers can take seats:', *[str(j+1)+i for i in q[:x1]]) # вывожу места
                    for i in c :
                        print('_'.join(i))
                    c[j][0]=c[j][0].replace('X','#') #бронирую места как занятые.
                    break
                else :
                    c1 +=1 # проверка на отсутствие подходящих мест во всех рядах.если будет равен количеству рядов то соответственно мест нет.
        elif x3=='aisle' : # дальше все тоже самое в зависимости от левый/правый ряд и пожелание группы  у окна или у прохода.
            x1=int(x1)
            for j in range(len(c)) :
                if  '#' not in c[j][0][-x1:] :
                    c[j][0]=c[j][0][:3-x1]+'X'*x1
                    print('Passengers can take seats:', *[str(j+1)+i for i in q[3-x1:3]])
                    for i in c :
                        print('_'.join(i))
                    c[j][0]=c[j][0].replace('X','#')
                    break
                else :
                    c1 +=1
    elif x2=='right' :
        if x3=='aisle' :
            x1=int(x1)
            for j in range(len(c)) :
                if  '#' not in c[j][1][:x1] :
                    c[j][1]='X'*x1+c[j][1][x1:]
                    print('Passengers can take seats:', *[str(j+1)+i for i in q[3:3+x1]])
                    for i in c :
                        print('_'.join(i))
                    c[j][1]=c[j][1].replace('X','#')
                    break
                else :
                    c1 +=1
        elif x3=='window' :
            x1=int(x1)
            for j in range(len(c)) :
                if  '#' not in c[j][1][-x1:] :
                    c[j][1]=c[j][1][:3-x1]+'X'*x1
                    print('Passengers can take seats:', *[str(j+1)+i for i in q[6-x1:]])
                    for i in c :
                        print('_'.join(i))
                    c[j][1]=c[j][1].replace('X','#')
                    break
                else :
                    c1 +=1
    if c1 == len(c) :
        print('Cannot fulfill passengers requirements')






















